<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Learning | Keep Learning]]></title>
  <link href="http://xiongbupt.github.com/tags/learning/atom.xml" rel="self"/>
  <link href="http://xiongbupt.github.com/"/>
  <updated>2012-06-07T05:58:54+08:00</updated>
  <id>http://xiongbupt.github.com/</id>
  <author>
    <name><![CDATA[Xiongbupt]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VIM用户手册27笔记]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/06/vim_help_read/"/>
    <updated>2012-06-06T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/06/vim_help_read</id>
    <content type="html"><![CDATA[<p>VIM的查找命令与模式，这章节和正则表达式相关，可以重点查阅下。</p>

<h1>大小写忽略</h1>

<p>ignorecase  忽视大小写<br/>
smartcase   若只有小写，可匹配大小写；若含有大写，则严格匹配  <br/>
特定模式中的大小写可以使用\C来严格匹配，\c可以用来通用匹配，不区分大小写</p>

<h1>无折返查找</h1>

<p><code>:set nowrapscan</code>简单的说就是在查找到文件结束处后不再返回文件开始处重新查找。</p>

<h1>查找偏移</h1>

<p><code>/pattern/2</code>，这个查找将会在单词pattern的后两行。 <br/>
* 匹配一个可选项，使用<code>\=</code>，比如</p>

<blockquote><p>/folders\=</p></blockquote>

<p>匹配的是"folder"和"folders"</p>

<ul>
<li><p>指定重复次数时，使用<code>\{n,m}</code>这样的形式。匹配n到m次，包括n和m，相当于一个闭区间。</p></li>
<li><p>匹配尽可能少的字符使用'{-n,m}`。与上面的作用类似，区别在于尽可能少的匹配。</p></li>
</ul>


<h1>多选一</h1>

<p>或的运算符是<code>\|</code>。</p>

<h1>字符范围</h1>

<table>
<thead>
<tr>
<th></th>
<th align="left">项    </th>
<th align="left">匹配         </th>
<th align="center">相当于 </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">\d </td>
<td align="left">数位         </td>
<td align="center">[0-9]</td>
</tr>
<tr>
<td></td>
<td align="left">\D </td>
<td align="left">非数位          </td>
<td align="center">[<sup>0-9]</sup></td>
</tr>
<tr>
<td></td>
<td align="left">\x </td>
<td align="left">十六进制数位 </td>
<td align="center">[0-9a-fA-F]</td>
</tr>
<tr>
<td></td>
<td align="left">\X </td>
<td align="left">非十六进制数位  </td>
<td align="center">[<sup>0-9a-fA-F]</sup></td>
</tr>
<tr>
<td></td>
<td align="left">\s </td>
<td align="left">空白字符       </td>
<td align="center">[  ]     (<Tab> 和 <Space>)</td>
</tr>
<tr>
<td></td>
<td align="left">\S </td>
<td align="left">非空白字符        </td>
<td align="center">[^     ]     (非 <Tab> 和 <Space>)</td>
</tr>
<tr>
<td></td>
<td align="left">\l </td>
<td align="left">小写字母       </td>
<td align="center">[a-z]</td>
</tr>
<tr>
<td></td>
<td align="left">\L </td>
<td align="left">非小写字母        </td>
<td align="center">[<sup>a-z]</sup></td>
</tr>
<tr>
<td></td>
<td align="left">\u </td>
<td align="left">大写字母       </td>
<td align="center">[A-Z]</td>
</tr>
<tr>
<td></td>
<td align="left">\U </td>
<td align="left">非大写字母        </td>
<td align="center">[<sup>A-Z]</sup></td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[汇编语言学习]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/06/assemble_language_learn/"/>
    <updated>2012-06-06T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/06/assemble_language_learn</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个操作系统的实现笔记]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/05/os_impletion/"/>
    <updated>2012-06-05T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/05/os_impletion</id>
    <content type="html"><![CDATA[<p>下面的主要介绍的是Arch下面，对<a href="http://book.douban.com/subject/3735649/" title="一个操作系统的实现">Orange'S一个操作系统的实现</a>，这本书的笔记。</p>

<h1>Arch下工具安装</h1>

<p>文章介绍的汇编器为nasm，在arch下安装相当简单</p>

<blockquote><p>pacman -S nasm</p></blockquote>

<p>上面这条命令即可完成nasm汇编器的安装。对于虚拟机，使用的是bochs，在Arch下如果使用<code>pacman</code>安装的话，没有调试功能，对于后期的调试不方便。但是在Arch的AUR包中，已经有了bochs的调试版本，仅仅需要使用<code>yaourt -S bochs-with-debugger</code>即可将具有调试功能的bochs虚拟机安装上。</p>

<p>在完成上述操作后，该书介绍的基本工具便已经完备了，接下来便是对bochs进行配置了。</p>

<h1>bochs配置</h1>

<p>bochs的示例配置文件位于<code>/usr/share/doc/bochs/bochsrc-sample.txt</code>，将该配置文件拷贝出来，位于自己工作目录下，并重新命名为bochsrc。这样在每次启动bochs时，便没有必要使用<code>-f</code>来指定使用的配置文件名。</p>

<p>按照书中的推荐配置，bochsrc-sample.txt文件很大，上面有很多不需要的配置选项，按照书中的指示，将bochsrc文件中配置精简为如下所示：</p>

<p><div class="highlight"><pre><code class="bash">megs:   32
floppya: <span class="nv">1_44</span><span class="o">=</span>a.img, <span class="nv">status</span><span class="o">=</span>inserted
romimage: <span class="nv">file</span><span class="o">=</span>/usr/share/bochs/BIOS-bochs-latest
vgaromimage: <span class="nv">file</span><span class="o">=</span>/usr/share/bochs/VGABIOS-lgpl-latest
boot: floppy
log: bochsout.txt
mouse: <span class="nv">enabled</span><span class="o">=</span>0
keyboard_mapping: <span class="nv">enabled</span><span class="o">=</span>1, <span class="nv">map</span><span class="o">=</span>/usr/share/bochs/keymaps/x11-pc-us.map
</code></pre>
</div>
</p>

<h1>汇编文件编译及制作启动软盘</h1>

<p>按照书中第一章节中的介绍，将启动软盘的代码敲入，然后使用nasm编译，使用bximage生成一个虚拟的软盘，接着使用dd工具将对应的编译生成的文件拷贝到相应的软盘工具中。接下来的工作按照书中介绍的内容继续即可。</p>

<h2>附录：汇编代码</h2>

<p><div class="highlight"><pre><code class="nasm"><span class="err">&lt;/</span><span class="nf">p</span><span class="o">&gt;</span>

<span class="err">&lt;</span><span class="nf">pre</span><span class="o">&gt;&lt;</span><span class="nv">code</span><span class="o">&gt;</span><span class="nv">org</span>     <span class="mh">07c00h</span>
<span class="nf">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="nb">cs</span>
<span class="nf">mov</span>     <span class="nb">ds</span><span class="p">,</span> <span class="nb">ax</span>
<span class="nf">mov</span>     <span class="nb">es</span><span class="p">,</span> <span class="nb">ax</span>
<span class="nf">call</span>    <span class="nb">Disp</span><span class="nv">Str</span>
<span class="nf">jmp</span>     <span class="kc">$</span>       <span class="c1">;jump to this line, be a dead loop</span>
<span class="err">&lt;/</span><span class="nf">code</span><span class="o">&gt;&lt;/</span><span class="nv">pre</span><span class="o">&gt;</span>

<span class="err">&lt;</span><span class="nf">p</span><span class="o">&gt;</span><span class="nb">Disp</span><span class="nv">Str</span><span class="p">:</span><span class="o">&lt;/</span><span class="nv">p</span><span class="o">&gt;</span>

<span class="err">&lt;</span><span class="nf">pre</span><span class="o">&gt;&lt;</span><span class="nv">code</span><span class="o">&gt;</span><span class="nv">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="nv">BootMessage</span>
<span class="nf">mov</span>     <span class="nb">bp</span><span class="p">,</span> <span class="nb">ax</span>
<span class="nf">mov</span>     <span class="nb">cx</span><span class="p">,</span> <span class="mi">16</span>      <span class="c1">;the length of string</span>
<span class="nf">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="mh">01301h</span>  <span class="c1">;make the font on the screen</span>
<span class="nf">mov</span>     <span class="nb">bx</span><span class="p">,</span> <span class="mh">000ch</span>
<span class="nf">mov</span>     <span class="nb">dl</span><span class="p">,</span> <span class="mi">0</span>
<span class="nf">int</span>     <span class="mh">10h</span>
<span class="nf">ret</span>
<span class="err">&lt;/</span><span class="nf">code</span><span class="o">&gt;&lt;/</span><span class="nv">pre</span><span class="o">&gt;</span>

<span class="err">&lt;</span><span class="nf">p</span><span class="o">&gt;</span><span class="nv">BootMessage</span><span class="p">:</span>        <span class="nv">db</span>      <span class="s">&quot;Hello, Os world!&quot;</span>
<span class="kd">times</span>   <span class="mi">510</span><span class="o">-</span><span class="p">(</span><span class="kc">$</span><span class="o">-</span><span class="kc">$$</span><span class="p">)</span>  <span class="nv">db</span>  <span class="mi">0</span>
<span class="kd">dw</span>      <span class="mh">0xaa55</span>
</code></pre>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git基本使用]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/05/31/git-basic/"/>
    <updated>2012-05-31T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/05/31/git-basic</id>
    <content type="html"><![CDATA[<p><code>git log branch_a..branch_b</code><br/>
显示branch_b有而branch_a没有的历史。<br/>
<code>git log branch_b..branch_a</code><br/>
显示branch_a有而branch_b没有的历史。</p>

<p><code>git log origin/master..HEAD</code><br/>
查看将会把什么推送到远端的master分支</p>

<p><code>git show HEAD</code> <br/>
<code>git show HEAD^</code><br/>
<code>git show HEAD~</code><br/>
^符号显示的是祖先，<sup>2显示的是第二父提交</sup></p>

<p>~显示的是父提交，~2显示的是父提交的父提交</p>

<p><code>git log reA..reB</code><br/>
<code>git log ^reA reB</code><br/>
<code>git log reB --not reA</code><br/>
上述三个命令等价，均是指包含reB而不包含reA</p>

<p><code>git log refA refB ^refC</code><br/>
<code>git log refA refB --not refC</code><br/>
<code>...</code>三点描述符，显示的是并集减去交集<br/>
<code>git log --left-right master...experiment</code></p>

<h3>交互式暂存</h3>

<p><code>git add -i</code>进入交互界面，输入数字进行选择</p>

<h3>存储</h3>

<p><code>git statsh</code>
当想切换分支，但是又不想将当前的工作提交到暂存区时，可以使用该指令。该指令将会把当前的工作状态暂存起来，采用堆栈的形式存储起来。当需要恢复暂存区的工作内容时，可以使用<code>git stash list</code>查看当前堆栈里面的暂存态。使用<code>git stash apply stash@{2}</code>将会恢复<code>git stash list</code>显示的第二个暂存。如果没有指明名字，直接使用<code>git stash apply</code>将会默认恢复最近的那次暂存。<br/>
<code>git stash apply</code>只是会应用存储，而不会将存储删除，如果需要删除存储，需要使用<code>git stash drop stash@{2}</code>来将相应的存储进行删除。<br/>
注意，<code>git stash apply</code>这个命令的使用不需要工作分支与当时使用<code>git stash</code>存储的分支在一个目录下，也就是说可以在分支a上存储，然后在分支b上使用<code>git stash apply</code>将在分支a上存储的内容应用到分支b上。git将会采用自动融合的机制，如果出现冲突，会要求解决冲突之后才能应用存储。</p>

<h2>重写历史</h2>

<h3>改变最近一次提交</h3>

<p>修改最后一次的声明，输入下面的命令即可
<div class="highlight"><pre><code class="bash"><span class="nv">$git</span> commit --amend
</code></pre>
</div>

如果在依次提交之后，发现还有文件没有增加进来，可以使用git add。发现文件需要删除，使用git rm。在完成这些操作之后，使用git commit --amend操作来进行修正。这样，便会将这次更新合并到上次的更新上去。注意不要在推送之后再使用这个方法。</p>

<h3>修改多次提交说明</h3>

<h2>自定义GIT</h2>

<pre><code>git config --global core.autocrlf true
</code></pre>

<p>根据不同平台，将换行符进行替换。
开启该选项后，git可以在代码提交时，自动将行结束符CRLF替换为LF，而在签出代码时将LF替换为CRLF。该选项在windows平台和Linux平台的共同使用时使用。</p>

<pre><code>git config --global core.autocrlf input
</code></pre>

<p>该选项将把git设置为在输入时将crlf转换为lf，而在输出时不转换。</p>

<p>如果都在windows下开发，且仅仅在windows下运行，可以设置为false取消此功能，把回车符记录在库中。</p>

<pre><code>git config --global core.autocrlf false
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning SQL CH9]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/05/25/learning-sql-ch9/"/>
    <updated>2012-05-25T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/05/25/learning-sql-ch9</id>
    <content type="html"><![CDATA[<h1>子查询</h1>

<p>可以用于4种SQL语句中。</p>

<h2>什么是子查询</h2>

<p>子查询是包含在另一个SQL语句内部的查询。子查询总是由括号括起来，并且通常在包含语句之前执行。
子查询可以返回的结果集为：</p>

<ul>
<li>单列单行</li>
<li>单列多行</li>
<li>多列多行</li>
</ul>


<p>当子查询的结果为单列单行时，它可以被用作等式的一个条件中的一个表达式，如果返回结果多于一行，它可以被比较，不能被用于等式判断）。</p>

<h2>子查询类型</h2>

<p>根据子查询是否独立可以分为非关联子查询（查询完全独立）和关联子查询（引用包含语句中的列）。</p>

<h2>非关联子查询</h2>

<p>可以独立执行。<br/>
非关联的返回单行单列的子查询是<font color ="red">标量子查询。</font>
子查询中可以使用各种查询语句（6个）。
单一事务不能等于多个事务的集合。</p>

<h3>多行单列子查询</h3>

<h4>in和not in运算符</h4>

<p><div class="highlight"><pre><code class="sql"><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">branch_id</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">city</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">FROM</span> <span class="n">branch</span>
<span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">WHERE</span> <span class="n">name</span> <span class="k">IN</span> <span class="p">(</span><span class="s1">&#39;Headquarters&#39;</span><span class="p">,</span> <span class="s1">&#39;Quincy Branch&#39;</span><span class="p">);</span>
<span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;+</span><span class="c1">-----------+---------------+---------+</span>
<span class="o">|</span> <span class="n">branch_id</span> <span class="o">|</span> <span class="n">name</span>          <span class="o">|</span> <span class="n">city</span>    <span class="o">|</span>
<span class="o">+</span><span class="c1">-----------+---------------+---------+</span>
<span class="o">|</span>         <span class="mi">1</span> <span class="o">|</span> <span class="n">Headquarters</span>  <span class="o">|</span> <span class="n">Waltham</span> <span class="o">|</span>
<span class="o">|</span>         <span class="mi">3</span> <span class="o">|</span> <span class="n">Quincy</span> <span class="n">Branch</span> <span class="o">|</span> <span class="n">Quincy</span>  <span class="o">|</span>
<span class="o">+</span><span class="c1">-----------+---------------+---------+</span>
<span class="mi">2</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">branch_id</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">city</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">FROM</span> <span class="n">branch</span>
<span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">WHERE</span> <span class="n">name</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span><span class="s1">&#39;Headquarters&#39;</span><span class="p">,</span> <span class="s1">&#39;Quincy Branch&#39;</span><span class="p">);</span>
<span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;+</span><span class="c1">-----------+---------------+--------+</span>
<span class="o">|</span> <span class="n">branch_id</span> <span class="o">|</span> <span class="n">name</span>          <span class="o">|</span> <span class="n">city</span>   <span class="o">|</span>
<span class="o">+</span><span class="c1">-----------+---------------+--------+</span>
<span class="o">|</span>         <span class="mi">2</span> <span class="o">|</span> <span class="n">Woburn</span> <span class="n">Branch</span> <span class="o">|</span> <span class="n">Woburn</span> <span class="o">|</span>
<span class="o">|</span>         <span class="mi">4</span> <span class="o">|</span> <span class="n">So</span><span class="p">.</span> <span class="n">NH</span> <span class="n">Branch</span> <span class="o">|</span> <span class="n">Salem</span>  <span class="o">|</span>
<span class="o">+</span><span class="c1">-----------+---------------+--------+</span>
<span class="mi">2</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
<span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">emp_id</span><span class="p">,</span> <span class="n">fname</span><span class="p">,</span> <span class="n">lname</span><span class="p">,</span> <span class="n">title</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">FROM</span> <span class="n">employee</span>
<span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">WHERE</span> <span class="n">emp_id</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="k">DISTINCT</span>
<span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="n">superior_emp_id</span>
<span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="k">FROM</span> <span class="n">employee</span>
<span class="o">-&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="p">);</span>
<span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;+</span><span class="c1">--------+---------+-----------+--------------------+</span>
<span class="o">|</span> <span class="n">emp_id</span> <span class="o">|</span> <span class="n">fname</span>   <span class="o">|</span> <span class="n">lname</span>     <span class="o">|</span> <span class="n">title</span>              <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+---------+-----------+--------------------+</span>
<span class="o">|</span>      <span class="mi">1</span> <span class="o">|</span> <span class="n">Michael</span> <span class="o">|</span> <span class="n">Smith</span>     <span class="o">|</span> <span class="n">President</span>          <span class="o">|</span>
<span class="o">|</span>      <span class="mi">3</span> <span class="o">|</span> <span class="n">Robert</span>  <span class="o">|</span> <span class="n">Tyler</span>     <span class="o">|</span> <span class="n">Treasurer</span>          <span class="o">|</span>
<span class="o">|</span>      <span class="mi">4</span> <span class="o">|</span> <span class="n">Susan</span>   <span class="o">|</span> <span class="n">Hawthorne</span> <span class="o">|</span> <span class="n">Operations</span> <span class="n">Manager</span> <span class="o">|</span>
<span class="o">|</span>      <span class="mi">6</span> <span class="o">|</span> <span class="n">Helen</span>   <span class="o">|</span> <span class="n">Fleming</span>   <span class="o">|</span> <span class="n">Head</span> <span class="n">Teller</span>        <span class="o">|</span>
<span class="o">|</span>     <span class="mi">10</span> <span class="o">|</span> <span class="n">Paula</span>   <span class="o">|</span> <span class="n">Roberts</span>   <span class="o">|</span> <span class="n">Head</span> <span class="n">Teller</span>        <span class="o">|</span>
<span class="o">|</span>     <span class="mi">13</span> <span class="o">|</span> <span class="n">John</span>    <span class="o">|</span> <span class="n">Blake</span>     <span class="o">|</span> <span class="n">Head</span> <span class="n">Teller</span>        <span class="o">|</span>
<span class="o">|</span>     <span class="mi">16</span> <span class="o">|</span> <span class="n">Theresa</span> <span class="o">|</span> <span class="n">Markham</span>   <span class="o">|</span> <span class="n">Head</span> <span class="n">Teller</span>        <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+---------+-----------+--------------------+</span>
<span class="mi">7</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mysql</span><span class="o">&gt;</span> <span class="k">SELECT</span> <span class="n">emp_id</span><span class="p">,</span> <span class="n">fname</span><span class="p">,</span> <span class="n">lname</span><span class="p">,</span> <span class="n">title</span> <span class="k">FROM</span> <span class="n">employee</span> <span class="k">WHERE</span> <span class="n">emp_id</span> <span class="k">NOT</span> <span class="k">IN</span> <span class="p">(</span><span class="k">SELECT</span> <span class="k">DISTINCT</span> <span class="n">superior_emp_id</span> <span class="k">FROM</span> <span class="n">employee</span> <span class="k">WHERE</span> <span class="n">superior_emp_id</span> <span class="k">IS</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">);</span>
<span class="o">+</span><span class="c1">--------+----------+----------+----------------+</span>
<span class="o">|</span> <span class="n">emp_id</span> <span class="o">|</span> <span class="n">fname</span>    <span class="o">|</span> <span class="n">lname</span>    <span class="o">|</span> <span class="n">title</span>          <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+----------+----------------+</span>
<span class="o">|</span>      <span class="mi">2</span> <span class="o">|</span> <span class="n">Susan</span>    <span class="o">|</span> <span class="n">Barker</span>   <span class="o">|</span> <span class="n">Vice</span> <span class="n">President</span> <span class="o">|</span>
<span class="o">|</span>      <span class="mi">5</span> <span class="o">|</span> <span class="n">John</span>     <span class="o">|</span> <span class="n">Gooding</span>  <span class="o">|</span> <span class="n">Loan</span> <span class="n">Manager</span>   <span class="o">|</span>
<span class="o">|</span>      <span class="mi">7</span> <span class="o">|</span> <span class="n">Chris</span>    <span class="o">|</span> <span class="n">Tucker</span>   <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">|</span>      <span class="mi">8</span> <span class="o">|</span> <span class="n">Sarah</span>    <span class="o">|</span> <span class="n">Parker</span>   <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">|</span>      <span class="mi">9</span> <span class="o">|</span> <span class="n">Jane</span>     <span class="o">|</span> <span class="n">Grossman</span> <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">|</span>     <span class="mi">11</span> <span class="o">|</span> <span class="n">Thomas</span>   <span class="o">|</span> <span class="n">Ziegler</span>  <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">|</span>     <span class="mi">12</span> <span class="o">|</span> <span class="n">Samantha</span> <span class="o">|</span> <span class="n">Jameson</span>  <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">|</span>     <span class="mi">14</span> <span class="o">|</span> <span class="n">Cindy</span>    <span class="o">|</span> <span class="n">Mason</span>    <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">|</span>     <span class="mi">15</span> <span class="o">|</span> <span class="n">Frank</span>    <span class="o">|</span> <span class="n">Portman</span>  <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">|</span>     <span class="mi">17</span> <span class="o">|</span> <span class="n">Beth</span>     <span class="o">|</span> <span class="n">Fowler</span>   <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">|</span>     <span class="mi">18</span> <span class="o">|</span> <span class="n">Rick</span>     <span class="o">|</span> <span class="n">Tulman</span>   <span class="o">|</span> <span class="n">Teller</span>         <span class="o">|</span>
<span class="o">+</span><span class="c1">--------+----------+----------+----------------+</span>
<span class="mi">11</span> <span class="k">rows</span> <span class="k">in</span> <span class="k">set</span> <span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">00</span> <span class="n">sec</span><span class="p">)</span>
</code></pre>
</div>

<font color ="red">注意上面在使用<code>NOT IN</code>的时候该子句中的<code>WHERE superior_emp_id IS NOT NULL</code></font></p>

<h4>all运算符</h4>

<h4>any运算符</h4>

<h3>多列子查询</h3>

<h2>关联子查询</h2>

<p>关联子查询为每一个候选行，即可能成为结果的行执行一遍。</p>

<h3>exists运算符</h3>

<p>exists运算符是构造包含关联子查询条件的最常用运算符。
在使用select语句时，经常使用的是<code>select 1</code>或者<code>select \*</code></p>

<h3>关联子查询操作数据</h3>

<p><font color ="red"><strong>切记，在MySQL中delete语句使用关联子查询时，无论如何都不能使用表别名。</strong></font></p>

<h2>何时使用子查询</h2>

<h3>子查询作为数据源</h3>

<h4>数据加工</h4>

<h4>面向任务的子查询</h4>

<h4>过滤条件 中的子查询</h4>

<h4>子查询作为表达式生成器</h4>

<h2>子查询总结</h2>

<ul>
<li>返回结果可以是单行单列，单列多行以及多列多行</li>
<li>可以独立于包含语句（非关联子查询）</li>
<li>可以引用包含语句中的一行或多行（关联子查询）</li>
<li>可以用于条件中，这些条件使用比较运算符以及其他特殊目的的运算符（in，not in，exists和not exists）；</li>
<li>它可以出现在select、update、delete和insert语句；</li>
<li>它产生的结果集可以与其他表或子查询连接；</li>
<li>它可以生成值来填充表或者查询结果集中的一些列；</li>
<li>它可以用于查询中的select，from，where，having和order by子句。</li>
</ul>

]]></content>
  </entry>
  
</feed>
