<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: OS | Keep Learning]]></title>
  <link href="http://xiongbupt.github.com/tags/os/atom.xml" rel="self"/>
  <link href="http://xiongbupt.github.com/"/>
  <updated>2012-06-07T05:58:54+08:00</updated>
  <id>http://xiongbupt.github.com/</id>
  <author>
    <name><![CDATA[Xiongbupt]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一个操作系统的实现笔记]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/05/os_impletion/"/>
    <updated>2012-06-05T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/05/os_impletion</id>
    <content type="html"><![CDATA[<p>下面的主要介绍的是Arch下面，对<a href="http://book.douban.com/subject/3735649/" title="一个操作系统的实现">Orange'S一个操作系统的实现</a>，这本书的笔记。</p>

<h1>Arch下工具安装</h1>

<p>文章介绍的汇编器为nasm，在arch下安装相当简单</p>

<blockquote><p>pacman -S nasm</p></blockquote>

<p>上面这条命令即可完成nasm汇编器的安装。对于虚拟机，使用的是bochs，在Arch下如果使用<code>pacman</code>安装的话，没有调试功能，对于后期的调试不方便。但是在Arch的AUR包中，已经有了bochs的调试版本，仅仅需要使用<code>yaourt -S bochs-with-debugger</code>即可将具有调试功能的bochs虚拟机安装上。</p>

<p>在完成上述操作后，该书介绍的基本工具便已经完备了，接下来便是对bochs进行配置了。</p>

<h1>bochs配置</h1>

<p>bochs的示例配置文件位于<code>/usr/share/doc/bochs/bochsrc-sample.txt</code>，将该配置文件拷贝出来，位于自己工作目录下，并重新命名为bochsrc。这样在每次启动bochs时，便没有必要使用<code>-f</code>来指定使用的配置文件名。</p>

<p>按照书中的推荐配置，bochsrc-sample.txt文件很大，上面有很多不需要的配置选项，按照书中的指示，将bochsrc文件中配置精简为如下所示：</p>

<p><div class="highlight"><pre><code class="bash">megs:   32
floppya: <span class="nv">1_44</span><span class="o">=</span>a.img, <span class="nv">status</span><span class="o">=</span>inserted
romimage: <span class="nv">file</span><span class="o">=</span>/usr/share/bochs/BIOS-bochs-latest
vgaromimage: <span class="nv">file</span><span class="o">=</span>/usr/share/bochs/VGABIOS-lgpl-latest
boot: floppy
log: bochsout.txt
mouse: <span class="nv">enabled</span><span class="o">=</span>0
keyboard_mapping: <span class="nv">enabled</span><span class="o">=</span>1, <span class="nv">map</span><span class="o">=</span>/usr/share/bochs/keymaps/x11-pc-us.map
</code></pre>
</div>
</p>

<h1>汇编文件编译及制作启动软盘</h1>

<p>按照书中第一章节中的介绍，将启动软盘的代码敲入，然后使用nasm编译，使用bximage生成一个虚拟的软盘，接着使用dd工具将对应的编译生成的文件拷贝到相应的软盘工具中。接下来的工作按照书中介绍的内容继续即可。</p>

<h2>附录：汇编代码</h2>

<p><div class="highlight"><pre><code class="nasm"><span class="err">&lt;/</span><span class="nf">p</span><span class="o">&gt;</span>

<span class="err">&lt;</span><span class="nf">pre</span><span class="o">&gt;&lt;</span><span class="nv">code</span><span class="o">&gt;</span><span class="nv">org</span>     <span class="mh">07c00h</span>
<span class="nf">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="nb">cs</span>
<span class="nf">mov</span>     <span class="nb">ds</span><span class="p">,</span> <span class="nb">ax</span>
<span class="nf">mov</span>     <span class="nb">es</span><span class="p">,</span> <span class="nb">ax</span>
<span class="nf">call</span>    <span class="nb">Disp</span><span class="nv">Str</span>
<span class="nf">jmp</span>     <span class="kc">$</span>       <span class="c1">;jump to this line, be a dead loop</span>
<span class="err">&lt;/</span><span class="nf">code</span><span class="o">&gt;&lt;/</span><span class="nv">pre</span><span class="o">&gt;</span>

<span class="err">&lt;</span><span class="nf">p</span><span class="o">&gt;</span><span class="nb">Disp</span><span class="nv">Str</span><span class="p">:</span><span class="o">&lt;/</span><span class="nv">p</span><span class="o">&gt;</span>

<span class="err">&lt;</span><span class="nf">pre</span><span class="o">&gt;&lt;</span><span class="nv">code</span><span class="o">&gt;</span><span class="nv">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="nv">BootMessage</span>
<span class="nf">mov</span>     <span class="nb">bp</span><span class="p">,</span> <span class="nb">ax</span>
<span class="nf">mov</span>     <span class="nb">cx</span><span class="p">,</span> <span class="mi">16</span>      <span class="c1">;the length of string</span>
<span class="nf">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="mh">01301h</span>  <span class="c1">;make the font on the screen</span>
<span class="nf">mov</span>     <span class="nb">bx</span><span class="p">,</span> <span class="mh">000ch</span>
<span class="nf">mov</span>     <span class="nb">dl</span><span class="p">,</span> <span class="mi">0</span>
<span class="nf">int</span>     <span class="mh">10h</span>
<span class="nf">ret</span>
<span class="err">&lt;/</span><span class="nf">code</span><span class="o">&gt;&lt;/</span><span class="nv">pre</span><span class="o">&gt;</span>

<span class="err">&lt;</span><span class="nf">p</span><span class="o">&gt;</span><span class="nv">BootMessage</span><span class="p">:</span>        <span class="nv">db</span>      <span class="s">&quot;Hello, Os world!&quot;</span>
<span class="kd">times</span>   <span class="mi">510</span><span class="o">-</span><span class="p">(</span><span class="kc">$</span><span class="o">-</span><span class="kc">$$</span><span class="p">)</span>  <span class="nv">db</span>  <span class="mi">0</span>
<span class="kd">dw</span>      <span class="mh">0xaa55</span>
</code></pre>
</div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux定时器]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/03/26/linux_timer/"/>
    <updated>2012-03-26T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/03/26/linux_timer</id>
    <content type="html"><![CDATA[<p><div class="highlight"><pre><code class="c"><span class="kt">int</span> <span class="n">mod_timer</span><span class="p">(</span><span class="k">struct</span> <span class="n">timer_list</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">timer</span><span class="err">，</span><span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">expires</span><span class="p">)</span>
</code></pre>
</div>

该函数负责修改内核定时器timer的超时字段expires。该函数可以修改激活和没有激活的内核定时器的超时时间，并把它们都设置为激活状态；返回值为0表示修改的内核定时器在修改之前处于未激活状态，返回值为1表示修改的内核定时器在修改之前处于已激活状态。
<div class="highlight"><pre><code class="c"><span class="n">del_timer</span><span class="p">(</span><span class="n">sturct</span> <span class="n">timer_list</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">timer</span><span class="p">)</span>
</code></pre>
</div>

返回值为0表示修删的内核定时器在删除之前处于未激活状态，返回值为1表示删除的内核定时器在删除之前处于已激活状态。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[现代操作系统：进程（笔记）]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/03/19/moder_operation_system_process/"/>
    <updated>2012-03-19T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/03/19/moder_operation_system_process</id>
    <content type="html"><![CDATA[<h3>进程</h3>

<h4>进程模型</h4>

<p>一个进程就是一个正在执行的程序实例，包括程序计数器、寄存器和变量的当前值。一个进程就是某种类型的一个活动，它有程序、输入、输出以及状态。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux内核设计与实现笔记]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/03/19/linux_kernel_notes/"/>
    <updated>2012-03-19T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/03/19/linux_kernel_notes</id>
    <content type="html"><![CDATA[<h3>Linux内核等待队列</h3>

<p>wait_queue_head_t<br/>
init_waitqueue_head()<br/>
DECLARE_WAIT_QUEUE_HEAD<br/>
等待队列就是一个进程链表，其中包含了所有等待某个特定事件的进程。<br/>
静态初始化一个等待队列头使用下面的宏</p>

<blockquote><p>DECLARE_WAIT_QUEUE_HEAD(name)</p></blockquote>

<p>动态初始化一个等待队列
<div class="highlight"><pre><code class="c"><span class="n">wait_queue_head_t</span> <span class="n">name</span><span class="p">;</span>
<span class="n">init_waitqueue_head</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">name</span><span class="p">)</span>
</code></pre>
</div>
</p>

<blockquote><p>add_wait_queue() <br/>
用来将一个进程添加到等待队列，该函数在获得必要的自旋锁后，使用<code>__add_wait_queue()</code>函数来完成队列添加工作</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux内核活动]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/03/07/linux_kernel_activity/"/>
    <updated>2012-03-07T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/03/07/linux_kernel_activity</id>
    <content type="html"><![CDATA[<h3>中断</h3>

<h4>中断类型</h4>

<p>同步中断和异常<br/>
异步中断：一般由硬件产生<br/>
硬件IRQ，中断控制器</p>
]]></content>
  </entry>
  
</feed>
