<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Notes | Keep Learning]]></title>
  <link href="http://xiongbupt.github.com/blog/categories/notes/atom.xml" rel="self"/>
  <link href="http://xiongbupt.github.com/"/>
  <updated>2012-06-07T22:55:13+08:00</updated>
  <id>http://xiongbupt.github.com/</id>
  <author>
    <name><![CDATA[Xiongbupt]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress添加标签]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/07/octopress-add-tag/"/>
    <updated>2012-06-07T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/07/octopress-add-tag</id>
    <content type="html"><![CDATA[<h2>前因</h2>

<p>由于之前参考中文的搜索，结果都不理想，推翻重来，直接使用<a href="http://www.google.com/">google</a>使用<code>octopress tag</code>关键词搜索到的<a href="http://aijazansari.com/2012/01/07/tag-clouds-with-octopress/">第一个返回结果</a>来修改，下面记录如下。</p>

<h3>显示所有的便签列表</h3>

<p>修改<code>source/_layouts/post.html</code>文件，使它们include一个名字为<code>tags.html</code>的新文件。</p>

<!--more-->


<p>创建一个新文件<code>source/_includes/post/tags.html</code>，整个文件的内容如下所示：</p>

<pre><code>&lt;div id="tag_list"&gt;
    Tags:
    &lt;ul id="tags_ul"&gt;

    &lt;/ul&gt;
&lt;/div&gt;
</code></pre>

<p>在sass/custom/_styles.css文件中添加如下内容：</p>

<pre><code>div#tag_list {
    font-size: 12pt;
}

#tags_ul {
    display: inline;
}

#tags_ul li:last-child:after {
  content: "";
}

#tags_ul li:after {
  content: ", ";
}

#tags_ul li {
    display: inline;
}
</code></pre>

<h3>创建tag文件和tag云</h3>

<p>使用作者提供的perl脚本文件。</p>

<h3>显示tag云标签</h3>

<p>为了在右侧显示云标签，需要修改<code>_config.yaml</code>文件，添加</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM用户手册27笔记]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/06/vim_help_read/"/>
    <updated>2012-06-06T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/06/vim_help_read</id>
    <content type="html"><![CDATA[<p>VIM的查找命令与模式，这章节和正则表达式相关，可以重点查阅下。</p>

<h2>大小写忽略</h2>

<p>ignorecase  忽视大小写<br/>
smartcase   若只有小写，可匹配大小写；若含有大写，则严格匹配  <br/>
特定模式中的大小写可以使用\C来严格匹配，\c可以用来通用匹配，不区分大小写</p>

<h2>无折返查找</h2>

<p><code>:set nowrapscan</code>简单的说就是在查找到文件结束处后不再返回文件开始处重新查找。</p>

<!--more-->


<h2>查找偏移</h2>

<p><code>/pattern/2</code>，这个查找将会在单词pattern的后两行。 <br/>
* 匹配一个可选项，使用<code>\=</code>，比如</p>

<blockquote><p>/folders\=</p></blockquote>

<p>匹配的是"folder"和"folders"</p>

<ul>
<li><p>指定重复次数时，使用<code>\{n,m}</code>这样的形式。匹配n到m次，包括n和m，相当于一个闭区间。</p></li>
<li><p>匹配尽可能少的字符使用'{-n,m}`。与上面的作用类似，区别在于尽可能少的匹配。</p></li>
</ul>


<h2>多选一</h2>

<p>或的运算符是<code>\|</code>。</p>

<h2>字符范围</h2>

<table>
<thead>
<tr>
<th></th>
<th align="left">项    </th>
<th align="left">匹配         </th>
<th align="center">相当于 </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="left">\d </td>
<td align="left">数位         </td>
<td align="center">[0-9]</td>
</tr>
<tr>
<td></td>
<td align="left">\D </td>
<td align="left">非数位          </td>
<td align="center">[<sup>0-9]</sup></td>
</tr>
<tr>
<td></td>
<td align="left">\x </td>
<td align="left">十六进制数位 </td>
<td align="center">[0-9a-fA-F]</td>
</tr>
<tr>
<td></td>
<td align="left">\X </td>
<td align="left">非十六进制数位  </td>
<td align="center">[<sup>0-9a-fA-F]</sup></td>
</tr>
<tr>
<td></td>
<td align="left">\s </td>
<td align="left">空白字符       </td>
<td align="center">[  ]     (<Tab> 和 <Space>)</td>
</tr>
<tr>
<td></td>
<td align="left">\S </td>
<td align="left">非空白字符        </td>
<td align="center">[^     ]     (非 <Tab> 和 <Space>)</td>
</tr>
<tr>
<td></td>
<td align="left">\l </td>
<td align="left">小写字母       </td>
<td align="center">[a-z]</td>
</tr>
<tr>
<td></td>
<td align="left">\L </td>
<td align="left">非小写字母        </td>
<td align="center">[<sup>a-z]</sup></td>
</tr>
<tr>
<td></td>
<td align="left">\u </td>
<td align="left">大写字母       </td>
<td align="center">[A-Z]</td>
</tr>
<tr>
<td></td>
<td align="left">\U </td>
<td align="left">非大写字母        </td>
<td align="center">[<sup>A-Z]</sup></td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[汇编语言学习]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/06/assemble_language_learn/"/>
    <updated>2012-06-06T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/06/assemble_language_learn</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VIM正则表达式学习]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/05/vim_regex_learning/"/>
    <updated>2012-06-05T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/05/vim_regex_learning</id>
    <content type="html"><![CDATA[<h2>VIM正则表达式</h2>

<p>之前粗略的看了正则表达式的一些内容，但是在VIM中一直用的很少，刚才无意间看到了使用VIM对词进行大小写转换，中间出现了一些正则表达式的内容，从网上找了些内容，觉得可以留下来做个笔记，供以后自己参考。<br/>
文章的主要内容参考<a href="http://qianjigui.iteye.com/blog/368449" title="VIM中的正则表达式">该博客</a>。</p>

<!--more-->


<h3>量词</h3>

<p>VIM中的量词与perl相比</p>

<table>
<thead>
<tr>
<th></th>
<th align="center">VIM    </th>
<th align="center">Perl   </th>
<th align="center">意义</th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="center">*      </td>
<td align="center">*      </td>
<td align="center">0个或多个(匹配优先)</td>
</tr>
<tr>
<td></td>
<td align="center">+     </td>
<td align="center">+      </td>
<td align="center">1个或多个(匹配优先)</td>
</tr>
<tr>
<td></td>
<td align="center">\?或\= </td>
<td align="center">?     </td>
<td align="center">0个或1个(匹配优先)，\?不能在 ? 命令（逆向查找）中使用</td>
</tr>
<tr>
<td></td>
<td align="center">{n,m} </td>
<td align="center">{n,m}  </td>
<td align="center">n个到m个(匹配优先)</td>
</tr>
<tr>
<td></td>
<td align="center">{n,}  </td>
<td align="center">{n,}   </td>
<td align="center">最少n个(匹配优先)</td>
</tr>
<tr>
<td></td>
<td align="center">{,m}  </td>
<td align="center">{,m}   </td>
<td align="center">最多m个(匹配优先)</td>
</tr>
<tr>
<td></td>
<td align="center">{n}   </td>
<td align="center">{n}    </td>
<td align="center">恰好n个</td>
</tr>
<tr>
<td></td>
<td align="center">{-n,m}</td>
<td align="center">{n,m}? </td>
<td align="center">n个到m个(忽略优先)</td>
</tr>
<tr>
<td></td>
<td align="center">{-}   </td>
<td align="center">*?     </td>
<td align="center">0个或多个(忽略优先)</td>
</tr>
<tr>
<td></td>
<td align="center">{-1,} </td>
<td align="center">+?     </td>
<td align="center">1个或多个(忽略优先)</td>
</tr>
<tr>
<td></td>
<td align="center">{-,1} </td>
<td align="center">??     </td>
<td align="center">0个或1个(忽略优先)</td>
</tr>
</tbody>
</table>


<h3>环视和固化分组</h3>

<p>这个内容之前没有接触过，只是简单的摘抄下来，后面再进行研究了。</p>

<table>
<thead>
<tr>
<th></th>
<th align="center">vim        </th>
<th align="center">Perl   </th>
<th align="center">意义           </th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
<td align="center">\@=        </td>
<td align="center">(?=    </td>
<td align="center">顺序环视</td>
</tr>
<tr>
<td></td>
<td align="center">\@!        </td>
<td align="center">(?!    </td>
<td align="center">顺序否定环视</td>
</tr>
<tr>
<td></td>
<td align="center">\@&lt;=       </td>
<td align="center">(?&lt;=   </td>
<td align="center">逆序环视</td>
</tr>
<tr>
<td></td>
<td align="center">\@&lt;!       </td>
<td align="center">(?&lt;!   </td>
<td align="center">逆序否定环视</td>
</tr>
<tr>
<td></td>
<td align="center">\@>        </td>
<td align="center">(?>    </td>
<td align="center">固化分组</td>
</tr>
<tr>
<td></td>
<td align="center">\%(atom)  </td>
<td align="center">(?:    </td>
<td align="center">非捕获型括号</td>
</tr>
</tbody>
</table>


<p>和perl稍有不同的是，vim中的环视和固化分组的模式的位置与perl不同。例如，查找紧跟在 foo 之后的 bar，perl将模式写在环视的括号内，而vim将模式写在环视的元字符之前。
Perl的写法</p>

<blockquote><p>/(?&lt;=foo)bar/
vim的写法
/(foo)\@&lt;=bar</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个操作系统的实现笔记]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/05/os_impletion/"/>
    <updated>2012-06-05T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/05/os_impletion</id>
    <content type="html"><![CDATA[<p>下面的主要介绍的是Arch下面，对<a href="http://book.douban.com/subject/3735649/" title="一个操作系统的实现">Orange'S一个操作系统的实现</a>，这本书的笔记。</p>

<h1>Arch下工具安装</h1>

<p>文章介绍的汇编器为nasm，在arch下安装相当简单</p>

<blockquote><p>pacman -S nasm</p></blockquote>

<!--more-->


<p>上面这条命令即可完成nasm汇编器的安装。对于虚拟机，使用的是bochs，在Arch下如果使用<code>pacman</code>安装的话，没有调试功能，对于后期的调试不方便。但是在Arch的AUR包中，已经有了bochs的调试版本，仅仅需要使用<code>yaourt -S bochs-with-debugger</code>即可将具有调试功能的bochs虚拟机安装上。</p>

<p>在完成上述操作后，该书介绍的基本工具便已经完备了，接下来便是对bochs进行配置了。</p>

<h1>bochs配置</h1>

<p>bochs的示例配置文件位于<code>/usr/share/doc/bochs/bochsrc-sample.txt</code>，将该配置文件拷贝出来，位于自己工作目录下，并重新命名为bochsrc。这样在每次启动bochs时，便没有必要使用<code>-f</code>来指定使用的配置文件名。</p>

<p>按照书中的推荐配置，bochsrc-sample.txt文件很大，上面有很多不需要的配置选项，按照书中的指示，将bochsrc文件中配置精简为如下所示：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>megs:   32
</span><span class='line'>floppya: <span class="nv">1_44</span><span class="o">=</span>a.img, <span class="nv">status</span><span class="o">=</span>inserted
</span><span class='line'>romimage: <span class="nv">file</span><span class="o">=</span>/usr/share/bochs/BIOS-bochs-latest
</span><span class='line'>vgaromimage: <span class="nv">file</span><span class="o">=</span>/usr/share/bochs/VGABIOS-lgpl-latest
</span><span class='line'>boot: floppy
</span><span class='line'>log: bochsout.txt
</span><span class='line'>mouse: <span class="nv">enabled</span><span class="o">=</span>0
</span><span class='line'>keyboard_mapping: <span class="nv">enabled</span><span class="o">=</span>1, <span class="nv">map</span><span class="o">=</span>/usr/share/bochs/keymaps/x11-pc-us.map
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>汇编文件编译及制作启动软盘</h1>

<p>按照书中第一章节中的介绍，将启动软盘的代码敲入，然后使用nasm编译，使用bximage生成一个虚拟的软盘，接着使用dd工具将对应的编译生成的文件拷贝到相应的软盘工具中。接下来的工作按照书中介绍的内容继续即可。</p>

<h2>附录：汇编代码</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='nasm'><span class='line'><span class="err">&lt;/</span><span class="nf">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;</span><span class="nf">pre</span><span class="o">&gt;&lt;</span><span class="nv">code</span><span class="o">&gt;</span><span class="nv">org</span>     <span class="mh">07c00h</span>
</span><span class='line'><span class="nf">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="nb">cs</span>
</span><span class='line'><span class="nf">mov</span>     <span class="nb">ds</span><span class="p">,</span> <span class="nb">ax</span>
</span><span class='line'><span class="nf">mov</span>     <span class="nb">es</span><span class="p">,</span> <span class="nb">ax</span>
</span><span class='line'><span class="nf">call</span>    <span class="nb">Disp</span><span class="nv">Str</span>
</span><span class='line'><span class="nf">jmp</span>     <span class="kc">$</span>       <span class="c1">;jump to this line, be a dead loop</span>
</span><span class='line'><span class="err">&lt;/</span><span class="nf">code</span><span class="o">&gt;&lt;/</span><span class="nv">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;</span><span class="nf">p</span><span class="o">&gt;</span><span class="nb">Disp</span><span class="nv">Str</span><span class="p">:</span><span class="o">&lt;/</span><span class="nv">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;</span><span class="nf">pre</span><span class="o">&gt;&lt;</span><span class="nv">code</span><span class="o">&gt;</span><span class="nv">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="nv">BootMessage</span>
</span><span class='line'><span class="nf">mov</span>     <span class="nb">bp</span><span class="p">,</span> <span class="nb">ax</span>
</span><span class='line'><span class="nf">mov</span>     <span class="nb">cx</span><span class="p">,</span> <span class="mi">16</span>      <span class="c1">;the length of string</span>
</span><span class='line'><span class="nf">mov</span>     <span class="nb">ax</span><span class="p">,</span> <span class="mh">01301h</span>  <span class="c1">;make the font on the screen</span>
</span><span class='line'><span class="nf">mov</span>     <span class="nb">bx</span><span class="p">,</span> <span class="mh">000ch</span>
</span><span class='line'><span class="nf">mov</span>     <span class="nb">dl</span><span class="p">,</span> <span class="mi">0</span>
</span><span class='line'><span class="nf">int</span>     <span class="mh">10h</span>
</span><span class='line'><span class="nf">ret</span>
</span><span class='line'><span class="err">&lt;/</span><span class="nf">code</span><span class="o">&gt;&lt;/</span><span class="nv">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="err">&lt;</span><span class="nf">p</span><span class="o">&gt;</span><span class="nv">BootMessage</span><span class="p">:</span>        <span class="nv">db</span>      <span class="s">&quot;Hello, Os world!&quot;</span>
</span><span class='line'><span class="kd">times</span>   <span class="mi">510</span><span class="o">-</span><span class="p">(</span><span class="kc">$</span><span class="o">-</span><span class="kc">$$</span><span class="p">)</span>  <span class="nv">db</span>  <span class="mi">0</span>
</span><span class='line'><span class="kd">dw</span>      <span class="mh">0xaa55</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
