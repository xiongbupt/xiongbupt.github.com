<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Keep Learning]]></title>
  <link href="http://xiongbupt.github.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://xiongbupt.github.com/"/>
  <updated>2012-06-14T10:57:25+08:00</updated>
  <id>http://xiongbupt.github.com/</id>
  <author>
    <name><![CDATA[Xiongbupt]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Arch指定DNS服务器]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/06/14/archzhi-ding-dnsfu-wu-qi/"/>
    <updated>2012-06-14T07:55:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/06/14/archzhi-ding-dnsfu-wu-qi</id>
    <content type="html"><![CDATA[<p>学校里提供了IPv6的接入，但是之前使用的一直是学校提供的DNS服务器，使用的是IPv4的方式。在google上的<a href="https://code.google.com/p/ipv6-hosts/" title="IPv6 Hosts">IPv6的hosts文档</a>上知道有IPv6的DNS服务器的地址，于是上网找了在Arch上设置DNS服务器的地址，简单记录如下。</p>

<h2>修改/etc/resolv.conf的可修改性</h2>

<p>由于学校使用的是DHCP的方式获取IP地址，Arch上使用的DHCP的客户端是dhcpcd，在默认情况下该服务器将会将获取的DNS服务器的地址填入到/etc/resolv.conf文件中。因此如果指定DNS服务器的方式，可以将该文件的文件设置为不可写。通过使用<kbd>chattr +i /etc/resolv.conf</kbd>的方式可以将该文件设置为不可修改的。<br/>
如果在网络的环境不变的情况下，使用该种方式便可以解决，但是由于在宿舍和在实验室的环境，这两个网络环境下学校指定的DNS服务器是不一样的，在使用校内提供的服务器时，还是用学校的DNS服务器便可以了，因此这种方法对自己而言还不是很合适。于是出现下面的方法。</p>

<!--more-->


<h2>增加/etc/resolv.conf.head文件</h2>

<p>最想的还是根据适当的情况，将一个不变的DNS服务器增加到/etc/resolv.conf文件中，在打开/etc/resolv.conf文件时，可以看到这样一行：</p>

<p>```</p>

<h1>/etc/resolv.conf.head can replace this line</h1>

<p>```
于是上网找了下这个文件的说明，似乎看到的是在/etc目录下新建一个名为resolv.conf.head的，dhcpcd客户端在将DNS服务器地址写入到resolv.conf文件时将会把resolv.conf.head文件的内容添加进入到resolv.conf文件中。因此可以通过在resolv.conf.head文件中添加内容来完成这个功能。</p>

<p>目前在电脑上使用的是第二种方法，完成了指定DNS服务器的方式，目前首选的是Google的IPv6服务器。</p>

<h3>附录：目前可用IPv6的DNS服务器地址</h3>

<p>根据Google上面提供的IPv6 DNS服务器的地址，目前摘抄如下：</p>

<ul>
<li>ordns.he.net （最优）

<pre><code>  2001:470:20::2
  74.82.42.42 
</code></pre></li>
<li>google-public-dns-a.google.com （推荐）

<pre><code>  2001:4860:4860::8888
  8.8.8.8（不返回 Google 系列的 AAAA 记录）    
</code></pre></li>
<li>google-public-dns-b.google.com （推荐）

<pre><code>  2001:4860:4860::8844
  8.8.4.4（不返回 Google 系列的 AAAA 记录） 
</code></pre></li>
<li>ns.ipv6.uni-leipzig.de （西欧地区适用）

<pre><code>  2001:638:902:1::10
  139.18.25.34 
</code></pre></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debian安装记录]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/04/01/debian/"/>
    <updated>2012-04-01T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/04/01/debian</id>
    <content type="html"><![CDATA[<h2>添加用户至sudo用户组并去除密码</h2>

<p>visudo修改为不需要密码，将</p>

<blockquote><p>%sudo ALL=(ALL):ALL<br/>
修改为
%sudo ALL=(ALL) NOPASSWD: ALL<br/>
将用户user_name添加至sudo用户组<br/>
{% codeblock lang:bash %}
adduser user_name sudo
{% endcodeblock %}
重新登录后，user_name用户即已经位于sudo用户组中。</p></blockquote>

<!--more-->


<h2>安装基本的软件</h2>

<p>{% codeblock lang:bash %}
sudo dpkg -i wireless-crda-1.14_i386.deb
sudo dpkg -i linux-headers-2.6.30-02063010_2.6.30-02063010_all.deb
sudo dpkg -i linux-headers-2.6.30-02063010-generic_2.6.30-02063010_all.deb
sudo dpkg -i linux-image-2.6.30-***.deb
{% endcodeblock %}</p>

<p>参照<a href="http://bbs.byr.cn/#!article/Linux/82799">北邮人论坛的linux版块</a>，设置debian的源
之后使用<code>sudo apt-get install</code>安装了
* vim
* ctags
* cscope
* vim-gtk
* ibus
* vim-doc
* vim-scripts
* gcc
* locales
* nautilus-open-terminal
* make
* build-essential</p>

<h2>将默认编辑器由gedit转换为gvim</h2>

<p>{% codeblock lang:bash %}
sudo cp /etc/gnome/defaults.list /etc/gnome/defaults.list.backup
sduo vim /etc/gnome/defaults.list
{% endcodeblock %}
将该文件中的<code>gedit.desktop</code>全部替换为<code>gvim.desktop</code></p>

<h2>添加ifconfig等命令到普通用户</h2>

<p>修改<code>/etc/profile</code>，将第7行的PATH中添加<code>/sbin</code></p>

<h2>安装中文字体</h2>

<ul>
<li>tty-wqy-zenhei</li>
<li>tty-wqy-microhei</li>
<li>xfonts-intl-chinese</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux定时器]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/03/26/linux_timer/"/>
    <updated>2012-03-26T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/03/26/linux_timer</id>
    <content type="html"><![CDATA[<p>{% codeblock lang:c %}
int mod_timer(struct timer_list *timer，unsigned long expires)
{% endcodeblock %}
该函数负责修改内核定时器timer的超时字段expires。该函数可以修改激活和没有激活的内核定时器的超时时间，并把它们都设置为激活状态；返回值为0表示修改的内核定时器在修改之前处于未激活状态，返回值为1表示修改的内核定时器在修改之前处于已激活状态。</p>

<!--more-->


<p>{% codeblock lang:c %}
del_timer(sturct timer_list *timer)
{% endcodeblock %}
返回值为0表示修删的内核定时器在删除之前处于未激活状态，返回值为1表示删除的内核定时器在删除之前处于已激活状态。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux内核活动]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/03/07/linux_kernel_activity/"/>
    <updated>2012-03-07T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/03/07/linux_kernel_activity</id>
    <content type="html"><![CDATA[<h3>中断</h3>

<h4>中断类型</h4>

<p>同步中断和异常<br/>
异步中断：一般由硬件产生<br/>
硬件IRQ，中断控制器</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learing bash笔记]]></title>
    <link href="http://xiongbupt.github.com/blog/2012/03/04/linux_bash/"/>
    <updated>2012-03-04T00:00:00+08:00</updated>
    <id>http://xiongbupt.github.com/blog/2012/03/04/linux_bash</id>
    <content type="html"><![CDATA[<h3>第一章</h3>

<p>cd - ：返回到之前的文件夹。用于工作路径的跳转。<br/>
\ ' "引用键，可以取消特殊字符的含义，各个功能有强弱，其中'为强取消."为若取消，\仅仅取消一个字符的含义。使用上面这三个可以在命令过长时取消回车的含义，一般终端会提示>作为提示符号。<br/>
ctrl+m在终端中相当于回车<br/>
ctrl+d DELETE<br/>
ctrl+j BACKSPACE<br/>
stty --all查看当前终端的所有ctrl配置。<br/>
在shell中，使用help中的通配符时，需要使用<code>''</code>将对应的通配符引用起来，如help 're*'; help 're??'等。</p>

<!--more-->


<h3>第二章 Command-Line Editing</h3>

<p>改变shell的编辑模式使用set命名<br/>
set -o emacs 或者 set -o vi<br/>
vi模式编辑中的一些基本知识</p>

<h4>字符移动</h4>

<p>vi模式中有两种词的概念，一种是non-blank，这些就是所有的非空字符便是这种概念，另一种是word，这些是仅仅由字母数字以及_组成的，其他的均不算。<br/>
h 左移一个字符<br/>
l 右移一个字符<br/>
w 右移一个词word<br/>
b 左移一个词word<br/>
W 下一个non-blank的开始<br/>
B 前一个non-blank的开始<br/>
e 当前词word的最后<br/>
E 当前词non-blank的最后<br/>
0 行的开始<br/>
^ non-blank的开始<br/>
$ 行的结束</p>

<h4>插入改变文本</h4>

<p>i<br/>
a append<br/>
I beginning<br/>
A end of line<br/>
R</p>

<h4>删除指令</h4>

<p>dh 向后删除一个字符<br/>
dl 向前删除一个字符<br/>
db 向后删除一个词<br/>
dw 向前删除一个词<br/>
dB 向后删除一个非空区域<br/>
dW向前删除一个非空区域<br/>
d$ 删除到行尾<br/>
d0 删除到行首</p>

<p>D d$<br/>
dd 0d$<br/>
C c$<br/>
cc 0c$<br/>
X dl<br/>
x dh</p>

<h4>历史中穿梭</h4>

<p>k - backward<br/>
j + forward<br/>
G   move to line given by repeat count<br/>
/string search backward<br/>
?string search forward<br/>
n       repeat the same as previous<br/>
N       repeat in opposite direction of previous</p>

<h4>字符寻找</h4>

<p>fx move right <br/>
Fx move left<br/>
tx move right (until, back one space)<br/>
Tx move left (until, forward one space)<br/>
; redo last finding<br/>
, redo last finding in opposite direction</p>

<h4>文本补全</h4>

<p>ESC \<br/>
*</p>

<h4>混杂命令</h4>

<p>~ 翻转大小写<br/>
- 将上一个命令的最后一个参数添加到当前行<br/>
ctrl-l 清空屏幕<br/>
# 注释符号<br/>
注意上述命令均需在vi的命令模式下输入，不能在输入模式下输入</p>

<h5>fc</h5>

<p>fc -l列出之前的命令，带编号。</p>

<h4>bash快捷键</h4>

<p>C-A 行开始<br/>
C-E 行结束<br/>
C-F 右移<br/>
C-B 左移<br/>
C-K 整行删除<br/>
C-P 向上翻阅历史命令<br/>
C-N 向下翻阅历史命令<br/>
C-R 搜索历史命令</p>

<h4>bash自定义中最重要四种特征</h4>

<p>特殊文件：.bashrc,.bash_log,.bash_profile<br/>
别名：alias<br/>
变量：var=value(等号两侧不能有空格）<br/>
选项</p>
]]></content>
  </entry>
  
</feed>
